version: "3"

volumes:
  postgres_data:
    driver: local
  kong_data:
    driver: local
  konga_data:
    driver: local
  keycloak_data:
    driver: local  

services:

  kong-database:
    image: postgres:9.5
    deploy:
      restart_policy:
        condition: any
    # networks:
    #   - kong-fc
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  ###
  ### Inicio do banco de dados
  ### Esse container ira realizar as criacoes iniciais das tabelas necessarias para
  ### armazenamento das configuracoes do Kong
  ###
  kong-migration-bootstrap:
    image: claudioed/kong-fc
    deploy:
      restart_policy:
        condition: on-failure
    # networks:
    #   - kong-fc
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
    command: kong migrations bootstrap

  ###
  ### Inicio do banco de dados
  ### Esse container ira realizar as configuracoes iniciais das tabelas necessarias para
  ### armazenamento das configuracoes do Kong
  ###
  kong-migration-up:
    image: claudioed/kong-fc
    # networks:
    #   - kong-fc
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
    command: kong migrations up

  ###
  ### Kong API Gateway
  ### Container com o runtime do Kong API Gateway
  ###
  kong:
    container_name: kong
    image: claudioed/kong-fc
    volumes:
      - kong_data:/usr/local/kong
    # networks:
    #   - kong-fc
    deploy:
      restart_policy:
        condition: any
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_PROXY_LISTEN=0.0.0.0:8000, 0.0.0.0:8443 ssl http2
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_REAL_IP_RECURSIVE=on
      - KONG_NGINX_HTTP_RESOLVER=8.8.8.8
      - KONG_PLUGINS=bundled
    ports:
      - "80:8000"
      - "443:8443"
      - "8001:8001"
    healthcheck:
      test: ["CMD", "wget", "-O-", "http://kong:8001/status"]
      interval: 5s
      retries: 10
    restart: on-failure

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

  keycloak:
    image: quay.io/keycloak/keycloak:legacy
    volumes:
      - keycloak_data:/opt/keycloak/data
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  ###
  ### Konga
  ### Administracao via interface grafica do Kong API Gateway
  ###
  konga:
    image: pantsel/konga
    volumes:
      - konga_data:/app/kongadata
    # networks:
    #   - kong-fc
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - kong-database
    environment:
      NODE_ENV: development
    ports:
      - "1337:1337"


###### activemq ######

  activemq:
    image: rmohr/activemq:5.15.9
    ports:
      - "61616:61616"
      - "8161:8161"
    environment:
      ACTIVEMQ_REMOVE_DEFAULT_ACCOUNT: "false"
      ACTIVEMQ_ADMIN_LOGIN: "admin"
      ACTIVEMQ_ADMIN_PASSWORD: "admin"
    volumes:
      - ./extras1/activemq:/opt/activemq/data
    # networks:
    #   - mule-rede  


###### KAFKA ######

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  kafka:
    image: confluentinc/cp-kafka:latest
    # volumes:
    #  - ./extras/kafka:/var/lib/kafka/data
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9092:9092" 
      