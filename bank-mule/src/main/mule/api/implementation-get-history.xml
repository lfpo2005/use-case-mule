<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
	<flow name="implementation-get-history-main"
		doc:id="8d25cbbe-53a4-47b8-9a7e-3c642aea7ce6">
		<flow-ref doc:name="implementation-get-history-select"
			doc:id="13b4120a-d5b1-40ef-ab48-845b9779189d"
			name="implementation-get-history-select" />
		<error-handler>
			<on-error-propagate type="ANY">
				<set-variable variableName="customErrorMessage"
					value="#[error.description]" doc:name="customErrorMessage" />
				<logger level="ERROR"
					message="#['Erro encontrado: ' ++ vars.customErrorMessage]"
					doc:name="CustomErrorMessage" />
				<ee:transform>
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    'Mensagem': vars.customErrorMessage default 'Erro desconhecido'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>

			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="implementation-get-history-select"
		doc:id="f6e3fe62-cfdf-4705-8294-3aec051cbed7">
		<logger level="INFO" message="#[payload]" doc:name="Payload" />
		<ee:transform doc:name="startDateComponents"
			doc:id="7c27e32f-71dd-4c9d-a72c-c67bee5c489a">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="startDateComponents" ><![CDATA[vars.startDate splitBy '-']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="currentYear and currentMonth" doc:id="64506833-a7f8-430a-88d5-bf24aef794a7" >
			<ee:message >
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="currentYear" ><![CDATA[vars.startDateComponents[0]]]></ee:set-variable>
				<ee:set-variable variableName="currentMonth" ><![CDATA[vars.startDateComponents[1]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="ab463299-a796-4672-b69d-99dbc98d8d4a" message="payload"/>
		<flow-ref doc:name="Validate Account Number"
			doc:id="aa6fed03-470a-4d57-89a9-9c4b6f7167ad"
			name="validate-account-number" />
		<db:select doc:name="Check if extract already generated"
			config-ref="Database_Config">
			<db:sql><![CDATA[SELECT last_query_date 
FROM
queries_extracts 
WHERE
account_number = :account_number 
AND EXTRACT(MONTH FROM last_query_date) = EXTRACT(MONTH FROM CURRENT_DATE)
AND EXTRACT(YEAR FROM last_query_date) = EXTRACT(YEAR FROM CURRENT_DATE);
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
    account_number: vars.account_number,
    currentMonth: vars.currentMonth,
    currentYear: vars.currentYear  
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Set Condition Variable">
			<ee:variables>
				<ee:set-variable variableName="isPayloadNotEmpty"><![CDATA[ payload != null and sizeOf(payload) > 0
        ]]></ee:set-variable>
				<ee:set-variable variableName="isDateValid"><![CDATA[if (vars.startDate as Date {format: "yyyy-MM-dd"} < (now() - |P31D|)) false else true]]>
				</ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice"
			doc:id="ca3293bb-e788-4957-a58a-954cc71f6cf3">
			<when expression="#[vars.isDateValid == false]">
				<ee:transform doc:name="Transform Message"
					doc:id="bd1202f0-46e3-4c96-b71c-df59f9752352">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "status": "erro",
    "mensagem": "O intervalo de datas fornecido não é válido. Por favor, escolha um intervalo dentro do último 30 dias."
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Payload"
					doc:id="f0cd3deb-b9d4-4f2d-a81b-ea6ba57b1cd1" message="#[payload]" />
			</when>
			<when expression="#[vars.isPayloadNotEmpty]">
				<flow-ref doc:name="implementation-get-balance-main"
					doc:id="5ebfbf3b-0572-4c0c-93f5-929d5a482736"
					name="implementation-get-balance-main" />
				<set-variable value="#[payload]" doc:name="getBalance"
					doc:id="bf9f35de-da21-4f14-8eb0-172a537f5a93"
					variableName="getBalance" />
				<set-variable value="404" doc:name="Set HTTP Status"
					doc:id="e6c88623-293f-4f21-ab66-8c8b08464abb"
					variableName="httpStatus" />
				<db:select doc:name="Select queries_extracts"
					doc:id="41872773-b148-46bf-bf56-03cf1074c5be"
					config-ref="Database_Config">
					<db:sql><![CDATA[SELECT *
FROM
queries_extracts
WHERE
account_number = :account_number]]></db:sql>
					<db:input-parameters><![CDATA[#[account_number: vars.account_number]]]></db:input-parameters>
				</db:select>
				<ee:transform doc:name="Transform Message"
					doc:id="163bcc99-229a-4151-b2a2-c9ae677f15ae">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{	"Data": vars.getBalance.Data,
	"Saldo": vars.getBalance.Saldo,
	"Numero Conta": vars.getBalance.Numero_Conta,
	"Extrato":{
		"status": "erro",
		"mensagem": "Ops! Não é permitido fazer mais de um extrato por mês.\nSó poderá fazer uma nova consulta a partir do dia: " ++ (payload.last_query_date[0] + |P30D|) as String {format: "dd-MM-yyyy"}
	} 
}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Payload"
					doc:id="e7618328-40dc-4a6f-bb01-fa5a72ad6786" message="#[payload]" />
			</when>
			<otherwise>
				<db:select doc:name="Get Accont-Id"
					doc:id="b407a4b9-0c28-4b6b-b5f3-716e6349adf2"
					config-ref="Database_Config">
					<db:sql><![CDATA[SELECT account_id
FROM
mule_accounts
WHERE
account_number = :account_number]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	account_number: vars.account_number
}]]]></db:input-parameters>
				</db:select>
				<set-variable value="#[payload.account_id]"
					doc:name="account_id" doc:id="19965a8b-854c-4d28-81f4-542224b6fec8"
					variableName="account_id" />
				<db:select doc:name="Get History"
					doc:id="7a302279-95f8-4a68-b1af-f7469ee5e8ca"
					config-ref="Database_Config">
					<db:sql><![CDATA[SELECT
    t.*,
    a.balance,
    a.account_number,
    CASE 
        WHEN t.types = 'DEPOSIT' THEN a.account_number
        WHEN t.types = 'WITHDRAWAL' THEN a.account_number
        ELSE f.account_number
    END as from_account_name
FROM mule_transactions t
    JOIN mule_accounts a ON t.account_id = a.account_id
    LEFT JOIN mule_accounts f ON t.from_account_id = f.account_id
WHERE t.account_id = :account_id
    AND DATE(t.date_transaction) BETWEEN :startDate AND :endDate
ORDER BY t.date_transaction DESC;]]></db:sql>
					<db:input-parameters><![CDATA[#[{
    account_id: payload[0].account_id,
    startDate: vars.startDate,
    endDate: vars.endDate
}]]]></db:input-parameters>
				</db:select>
				<set-variable value="#[payload]" doc:name="getHistory"
					doc:id="5ba67d94-65aa-42ea-a559-ff4e721f7652"
					variableName="getHistory" />
				<logger level="INFO" doc:name="Payload"
					doc:id="c0f1744a-9464-43ad-ad65-6b0b0bf93ca8" message="#[payload]" />
				<choice doc:name="Check if Payload is Empty">
					<when expression="#[payload == null or sizeOf(payload) == 0]">
						<ee:transform doc:name="Set Payload for Empty Result">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "status": "info",
    "message": "Não há transações no período especificado."
}
]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<logger level="INFO" doc:name="Payload"
							doc:id="5478d756-7f59-481c-af88-85a2227bb9f5"
							message="#[payload]" />
					</when>
					<otherwise>
						<!-- Your existing logic for when payload is not empty -->
						<db:insert doc:name="Insert or Update Last Query Date"
							config-ref="Database_Config">
							<db:sql><![CDATA[INSERT INTO queries_extracts
(account_number, last_query_date)
VALUES
(:account_number, CURRENT_DATE)
ON CONFLICT (account_number) 
DO UPDATE SET last_query_date = CURRENT_DATE;
]]>
            </db:sql>
							<db:input-parameters><![CDATA[#[{
   account_number: vars.account_number,
}]]]>
            </db:input-parameters>
						</db:insert>
						<ee:transform doc:name="Transform Message"
							doc:id="69f1da7c-3d9d-40ae-92d3-0e5acae0ee86">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"Numero da conta": vars.getHistory[0].account_number,
	"Nome": vars.getHistory[0].to_account_name,
	"Saldo": vars.getHistory[0].balance,
	"Data": now() as Date {format: "dd/MM/yyyy"} as String {format: "dd MMM, yyyy"},
	"Transações": vars.getHistory map (item) -> {
		"Data": item.date_transaction as String {format: "dd-MM-yyyy"},
		"Horas": item.date_transaction as String {format: "HH:mm:ss"},    
	    "Tipo de transação": item.types,
	    "Valor": item.amount,
	    "De": item.from_account_name
	}filterObject (value, key) -> value != null
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<logger level="INFO" doc:name="Payload"
							doc:id="00e71b2b-08ba-41c5-b281-9b324ff19511"
							message="#[payload]" />

					</otherwise>
				</choice>
			</otherwise>
		</choice>
	</flow>
</mule>
