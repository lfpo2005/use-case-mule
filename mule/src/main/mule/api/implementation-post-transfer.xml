<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd">
	<flow name="implementation-post-transfer-main"
		doc:id="2bb8e8ef-b79a-4d28-86d9-3161b5ef7e4a">
		<flow-ref doc:name="Flow Reference-Fron"
			doc:id="0adeccba-db49-4cbd-836a-da5c7acb9a17"
			name="implementation-post-transfer-from" />
		<flow-ref doc:name="Flow Reference-To"
			doc:id="6215587a-b90e-4850-8078-4ecc091bee10"
			name="implementation-post-transfer-to" />
		<flow-ref doc:name="Flow Reference-Publish" doc:id="edb22b22-67a7-4bc0-99fc-8252cbb39e08" name="implementation-post-transfer-publish"/>
		<flow-ref doc:name="Flow Reference-Consume"
			doc:id="16d8009e-e822-46f5-b105-2f17dcd096cf"
			name="implementation-post-transfer-consume" />
		<error-handler>
			<on-error-propagate type="ANY">
				<set-variable variableName="customErrorMessage"
					value="#[error.description]" doc:name="customErrorMessage"/>
				<set-variable value="404" doc:name="Set HTTP Status" doc:id="1da8a590-bf34-4698-bbc1-1369d0a78f60" variableName="httpStatus" />
				<logger level="ERROR"
					message="#['Erro encontrado: ' ++ vars.customErrorMessage]" doc:name="customErrorMessage"/>
				<ee:transform>
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    'Mensagem': vars.customErrorMessage default 'Erro desconhecido'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			
</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="implementation-post-transfer-from">
		<logger level="INFO"
			message="Transfer from account: #[vars.from_account_number] to account: #[vars.to_account_number] with amount: #[vars.amount]" doc:name="customMessage"/>

		<db:select config-ref="Database_Config" doc:name="Select from_account_number">
			<db:sql><![CDATA[SELECT * FROM mule_account WHERE account_number = :from_account_number]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	'from_account_number': vars.from_account_number
}]]]></db:input-parameters>
		</db:select>
		<choice>
			<when
				expression="#[(payload[0].account_number default 0) as Number != null and (vars.from_account_number default 0) as Number == (payload[0].account_number default 0) as Number]">
				<set-variable value="#[payload[0]]"
					variableName="fromAccountInfo" doc:name="fromAccountInfo"/>
			</when>
			<otherwise>
				<raise-error type="CUSTOM:INVALID_ACCOUNT"
					description="Número da conta de origem inválido." doc:name="CUSTOM:INVALID_ACCOUNT"/>
			</otherwise>
		</choice>
		<error-handler>
			<on-error-propagate type="CUSTOM:INVALID_ACCOUNT">
				<logger level="ERROR"
					message="Falha na execução da query. Possível conta inexistente." doc:name="CUSTOM:INVALID_ACCOUNT"/>
				<ee:transform>
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    'Mensagem': 'Falha na execução da query. Verifique as informações da conta.'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			
</on-error-propagate>
		</error-handler>

	</flow>
	<flow name="implementation-post-transfer-to"
		doc:id="56157ebc-ba1b-4290-957d-b8af8f8aebbf">
		<logger level="INFO" doc:name="payload"
			doc:id="08ca6443-697e-49fa-bfd6-f97e2e1c5a9e" message="#[payload]" />
		<db:select config-ref="Database_Config" doc:name="Select to_account_number">
			<db:sql><![CDATA[SELECT * FROM mule_account WHERE account_number = :to_account_number]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	'to_account_number': vars.to_account_number
}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice"
			doc:id="1595cbdd-50d4-47c3-9763-1942e7329df3">
			<when
				expression="#[(payload[0].account_number default 0) as Number != null and (vars.to_account_number default 0) as Number == (payload[0].account_number default 0) as Number]">
				<set-variable value="#[payload[0]]"
					variableName="toAccountInfo" doc:name="toAccountInfo"/>
			</when>
			<otherwise>
				<raise-error doc:name="CUSTOM:INVALID_ACCOUNT"
					doc:id="8b83d376-535a-4acd-b536-5800a533b2c7"
					type="CUSTOM:INVALID_ACCOUNT"
					description="Número da conta de destino inválido." />
			</otherwise>
		</choice>
		<error-handler>
			<on-error-propagate type="DB:QUERY_EXECUTION">
				<logger level="ERROR"
					message="Falha na execução da query. Possível conta inexistente." doc:name="CUSTOM:INVALID_ACCOUNT"/>
				<ee:transform doc:name="Transform Message"
					doc:id="62e44593-ef38-45be-98c3-e3a96006b3fc">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
'Mensagem': 'Falha na transferência: verifique o número da conta de destino'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="implementation-post-transfer-publish" doc:id="f6d2689b-bf22-4344-acd7-910391d46cd7" >
		<logger level="INFO" doc:name="payload" doc:id="c12c79d3-2470-4f24-a508-67ed6fd9111f" message="payload"/>
		<ee:transform doc:name="Transform Message" doc:id="9048a130-46f7-44f8-9e8a-5f2b04714c4b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	account_number: payload.account_number,
	account_id: payload.account_id,
	balance: payload.balance,
	name: payload.name,
	to_account_number: vars.to_account_number,
	from_account_number: vars.from_account_number,
	amount: vars.amount,
	fromAccountInfo: {
		account_number: vars.fromAccountInfo.account_number,
		account_id: vars.fromAccountInfo.account_id,
		balance: vars.fromAccountInfo.balance,
		name: vars.fromAccountInfo.name
	},
	toAccountInfo: {
		account_number: vars.toAccountInfo.account_number,
		account_id: vars.toAccountInfo.account_id,
		balance: vars.toAccountInfo.balance,
		name: vars.toAccountInfo.name
	}
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<jms:publish doc:name="Publish-stg-transfer" doc:id="8c9d02cf-e94a-4645-8917-57245f4b6f7c" config-ref="JMS_Config" destination="stg-transfer"/>
	</flow>
	<flow name="implementation-post-transfer-consume"
		doc:id="ed84f3a0-c289-4107-8fbc-6e6c85169649">
		<set-payload value="#[null]" doc:name="null" doc:id="04588d48-e31e-41b2-9842-2aeeb673556e" />
		<jms:consume doc:name="Consume-stg-transfer" doc:id="780779f7-1734-40f4-ae59-8811e0203658" config-ref="JMS_Config" destination="stg-transfer" maximumWait="30000"/>
		<set-variable value="#[payload]" doc:name="newData" doc:id="69a83f90-a9f7-4948-ba27-b9f70a865911" variableName="newData"/>
		<logger level="INFO" doc:name="payload" doc:id="bcc6348d-ccdd-45b1-b142-f398424f067b" message="#[payload]"/>
		<choice>
			<when
				expression="#[(vars.amount != null) and (vars.fromAccountInfo.balance != null) and (vars.amount &gt; 0) and (vars.amount &lt;= vars.fromAccountInfo.balance)]">
				<!-- Update From Account Balance -->
				<db:update config-ref="Database_Config"
					doc:name="Update-get-amount">
					<db:sql><![CDATA[UPDATE mule_account SET balance = balance - :amount WHERE account_id = :account_id]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	'amount': vars.newData.amount,
	'account_id': vars.newData.fromAccountInfo.account_id
}]]]></db:input-parameters>
				</db:update>
				<db:update config-ref="Database_Config"
					doc:name="Update-post-amount">
					<db:sql><![CDATA[UPDATE mule_account SET balance = balance + :amount WHERE account_id = :account_id]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	'amount': vars.newData.amount,
	'account_id': vars.newData.toAccountInfo.account_id
}]]]></db:input-parameters>
				</db:update>
				<db:insert config-ref="Database_Config"
					doc:name="Insert-from">
					<db:sql><![CDATA[INSERT INTO mule_transaction(account_id, from_account_id, types, amount, date_transaction) VALUES (:account_id, :from_account_id, :types, :amount, now())]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	'account_id': vars.newData.fromAccountInfo.account_id,
	'to_account_id': vars.newData.toAccountInfo.account_id, 
	'from_account_id': vars.newData.fromAccountInfo.account_id,
	'types': 'TRANSFER_OUT',
	'amount': vars.newData.amount
	
}]]]></db:input-parameters>
				</db:insert>
				<db:insert config-ref="Database_Config"
					doc:name="Insert-to">
					<db:sql><![CDATA[INSERT INTO mule_transaction(account_id, from_account_id, types, amount, date_transaction) VALUES (:account_id, :from_account_id, :types, :amount, now())]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	'account_id': vars.newData.toAccountInfo.account_id,
	'from_account_id': vars.newData.fromAccountInfo.account_id,
	'types': 'TRANSFER_IN',
	'amount': vars.newData.amount
}]]]></db:input-parameters>
				</db:insert>
				<ee:transform doc:name="Transform Message"
					doc:id="e5296340-5f50-4f38-baad-4eed70b099a2">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	'Mensagem': "Transferência feita com sucesso"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="payload" doc:id="0cdef7a8-64cc-41fc-ba5b-dfbb941e4f2b" message="#[payload]" />
			
</when>
			<otherwise>
				<ee:transform doc:name="Transform Message"
					doc:id="a6a36b50-ce7d-4933-9c79-cdeb37bbad64">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	'Mensagem': 'Falha na transferência: saldo insuficiente ou valor inválido'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="payload" doc:id="bf0173e7-8b17-4e13-b030-aaaf39e68ad6" message="#[payload]" />
			
</otherwise>
		</choice>
		<error-handler>
			<on-error-continue type="DB:QUERY_EXECUTION">
				<logger level="ERROR"
					message="Falha na execução da query. Possível conta inexistente." doc:name="Custom:ErroMsg"/>
				<ee:transform doc:name="Transform Message">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
     'Mensagem': 'Falha na execução da query. Verifique as informações da conta.'
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-continue>
		</error-handler>
	</flow>
</mule>